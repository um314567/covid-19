{"version":3,"sources":["components/Header.js","components/Contents.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Contents","useState","confirmedData","setConfirmedData","quarantinedData","setQurantinedData","comparedData","setComparedData","useEffect","fetchEvents","a","axios","get","res","makeData","data","items","arr","reduce","acc","cur","currentDate","Date","year","getFullYear","month","getMonth","date","getDate","confirmed","active","Active","death","Deaths","recovered","Recovered","findItem","find","push","console","log","labels","map","datasets","label","backgroundColor","fill","borderColor","last","length","options","legend","display","position","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.214fe38d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>Harry's COVID-19</h1>\r\n      <select>\r\n        <option>국내</option>\r\n        <option>세계</option>\r\n      </select>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { useState, useEffect } from \"react\";\r\nimport { Bar, Doughnut, Line } from \"react-chartjs-2\";\r\nimport axios from \"axios\";\r\nconst Contents = () => {\r\n  const [confirmedData, setConfirmedData] = useState({});\r\n  const [quarantinedData, setQurantinedData] = useState({});\r\n  const [comparedData, setComparedData] = useState({});\r\n  useEffect(() => {\r\n    const fetchEvents = async () => {\r\n      const res = await axios.get(\r\n        \"https://api.covid19api.com/total/dayone/country/kr\"\r\n      );\r\n      makeData(res.data);\r\n    };\r\n\r\n    const makeData = (items) => {\r\n      const arr = items.reduce((acc, cur) => {\r\n        const currentDate = new Date(cur.Date);\r\n        const year = currentDate.getFullYear();\r\n        const month = currentDate.getMonth();\r\n        const date = currentDate.getDate();\r\n\r\n        const confirmed = cur.confirmed;\r\n        const active = cur.Active;\r\n        const death = cur.Deaths;\r\n        const recovered = cur.Recovered;\r\n\r\n        const findItem = acc.find((a) => a.year === year && a.month === month);\r\n        if (!findItem) {\r\n          acc.push({ year, month, date, confirmed, active, death, recovered });\r\n        }\r\n\r\n        if (findItem && findItem.date < date) {\r\n          findItem.active = active;\r\n          findItem.death = death;\r\n          findItem.date = date;\r\n          findItem.year = year;\r\n          findItem.month = month;\r\n          findItem.recovered = recovered;\r\n          findItem.confirmed = confirmed;\r\n        }\r\n        return acc;\r\n      }, []);\r\n      console.log(arr);\r\n      const labels = arr.map((a) => a.month + 1 + \"월\");\r\n      setConfirmedData({\r\n        labels,\r\n        datasets: [\r\n          {\r\n            label: \"국내 누적 확진자\",\r\n            backgroundColor: \"salmon\",\r\n            fill: true,\r\n            data: arr.map((a) => a.recovered),\r\n          },\r\n        ],\r\n      });\r\n      setQurantinedData({\r\n        labels,\r\n        datasets: [\r\n          {\r\n            label: \"월별 격리자 현황\",\r\n            borderColor: \"salmon\",\r\n            fill: false,\r\n            data: arr.map((a) => a.active),\r\n          },\r\n        ],\r\n      });\r\n      const last = arr[arr.length - 1];\r\n      setComparedData({\r\n        labels: [\"확진자\", \"격리 해제\", \"사망\"],\r\n        datasets: [\r\n          {\r\n            label: \"누적 확진, 해제, 사망 비율\",\r\n            backgroundColor: [\"#ff3d67\", \"#059bff\", \"#ffc233\"],\r\n            borderColor: [\"#ff3d67\", \"#059bff\", \"#ffc233\"],\r\n            fill: false,\r\n            data: [last.recovered, last.recovered, last.death],\r\n          },\r\n        ],\r\n      });\r\n    };\r\n\r\n    fetchEvents();\r\n  }, []);\r\n\r\n  return (\r\n    <section>\r\n      <h2>국내 코로나 현황</h2>\r\n      <div className=\"contents\">\r\n        <div>\r\n          <Bar\r\n            data={confirmedData}\r\n            options={\r\n              ({\r\n                title: {\r\n                  display: true,\r\n                  text: \"누적 확진자 추이\",\r\n                  fontSize: 16,\r\n                },\r\n              },\r\n              { legend: { display: true, position: \"bottom\" } })\r\n            }\r\n          />\r\n        </div>\r\n        <div>\r\n          <Line\r\n            data={quarantinedData}\r\n            options={\r\n              ({\r\n                title: {\r\n                  display: true,\r\n                  text: \"월별 격리자 현황\",\r\n                  fontSize: 16,\r\n                },\r\n              },\r\n              { legend: { display: true, position: \"bottom\" } })\r\n            }\r\n          />\r\n        </div>\r\n        <div>\r\n          <Doughnut\r\n            data={comparedData}\r\n            options={\r\n              ({\r\n                title: {\r\n                  display: true,\r\n                  text: \"누적 확진, 해제 사망(${new Date().getMonth()+1}월)\",\r\n                  fontSize: 16,\r\n                },\r\n              },\r\n              { legend: { display: true, position: \"bottom\" } })\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Contents;\r\n","import \"./App.css\";\nimport Header from \"./components/Header\";\nimport Contents from \"./components/Contents\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Contents />\n      <section></section>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}